#!/usr/bin/env bash
BASEDIR=$(dirname $(dirname $0))
. "${BASEDIR}/lib/env.sh"
set -e

if [ ! -d ${workdir} ] ; then
  mkdir -p ${workdir}
fi

if [ ! -d ${key_dir} ] ; then
  mkdir -p ${key_dir}
fi

if [ ! -d ${state_dir} ] ; then
  mkdir -p ${state_dir}
fi

plan() {
  bbl plan --state-dir ${state_dir}
}

patch() {
  cp -r ${patch_dir}/${iaas}/bootstrap/. ${state_dir}
  bosh interpolate --var subdomain=${subdomain} --var subdomain-token=${subdomain_token} ${patch_dir}/${iaas}/bootstrap/vars/bootstrap.tfvars > ${state_dir}/vars/bootstrap.tfvars
}

director() {
  echo "Creating the $env_id BOSH director..."
  bbl up --state-dir ${state_dir} --debug
  env_id=$(bbl env-id --state-dir ${state_dir})
}

client() {
  echo "Configuring BOSH client for the $env_id director..."
  # can't reuse bbl print-env --state-dir ${state_dir} without redoing the tunnel (with new port), so be aware of that by saving the variable setting
  bbl_env=$(bbl print-env --state-dir ${state_dir})
  echo "${bbl_env}" | sed '/ssh/ d' > ${workdir}/bbl-env.sh
  chmod 755 ${workdir}/bbl-env.sh
  eval "$bbl_env"
  # store the ssh key for easy use
  if [ -f ${key_dir}/id_jumpbox_${env_id}.pem ] ; then
    chmod 600 ${key_dir}/id_jumpbox_${env_id}.pem
  fi
  bbl ssh-key --state-dir ${state_dir} > ${key_dir}/id_jumpbox_${env_id}.pem
  chmod 400 ${key_dir}/id_jumpbox_${env_id}.pem

  bosh_ca_cert=$(bbl director-ca-cert --state-dir ${state_dir})
  bosh_director_address=$(bbl director-address --state-dir ${state_dir})
  bosh alias-env --environment="${bosh_director_address}" --ca-cert="${bosh_ca_cert}" $(bbl env-id --state-dir ${state_dir})
}

login() {
  echo "Logging into the $env_id director..."
  . "${workdir}/bbl-env.sh"
  bosh log-in -e $(bbl env-id --state-dir ${state_dir}) --client="${BOSH_CLIENT}" --client-secret="${BOSH_CLIENT_SECRET}"
}

if [ $# -gt 0 ]; then
  while [ $# -gt 0 ]; do
    case $1 in
      plan )
        plan
        ;;
      patch )
        patch
        ;;
      director )
        director
        ;;
      firewall )
        firewall
        ;;
      client )
        client
        ;;
      login )
        login
        ;;
      trust )
        trust
        ;;
      * )
        echo "Unrecognized option: $1" 1>&2
        exit 1
        ;;
    esac
    shift
  done
  exit
fi

plan
patch
director
client
login
trust
